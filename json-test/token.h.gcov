        -:    0:Source:/home/miguel/workspace/trade/akela/json/token.h
        -:    1:#ifndef JSON_TOKEN_H
        -:    2:#define JSON_TOKEN_H
        -:    3:
        -:    4:#include "zinc/buffer.h"
        -:    5:#include "zinc/error.h"
        -:    6:
        -:    7:typedef enum Json_token_type {
        -:    8:    Json_token_type_none,
        -:    9:    Json_token_type_string,
        -:   10:    Json_token_type_number,
        -:   11:    Json_token_type_eof,
        -:   12:    Json_token_type_left_square_bracket,
        -:   13:    Json_token_type_right_square_bracket,
        -:   14:    Json_token_type_comma,
        -:   15:    Json_token_type_left_curly_brace,
        -:   16:    Json_token_type_right_curly_brace,
        -:   17:    Json_token_type_colon,
        -:   18:    Json_token_type_true,
        -:   19:    Json_token_type_false,
        -:   20:    Json_token_type_null,
        -:   21:    Json_token_type_count,      /* keep at end */
        -:   22:} Json_token_type;
        -:   23:
        -:   24:
    #####:   25:static char* Json_token_type_name(Json_token_type type)
        -:   26:{
    #####:   27:    char* name_array[Json_token_type_count] = {
        -:   28:        "none",
        -:   29:        "string",
        -:   30:        "number",
        -:   31:        "eof",
        -:   32:        "left square bracket",
        -:   33:        "right square bracket",
        -:   34:        "comma",
        -:   35:        "left curly brace",
        -:   36:        "right curly brace",
        -:   37:        "colon",
        -:   38:        "true",
        -:   39:        "false",
        -:   40:        "null",
        -:   41:    };
        -:   42:
    #####:   43:    return name_array[type];
        -:   44:}
        -:   45:
        -:   46:typedef enum Json_number_type {
        -:   47:    Json_number_type_none,
        -:   48:    Json_number_type_integer,
        -:   49:    Json_number_type_fp,
        -:   50:} Json_number_type;
        -:   51:
        -:   52:typedef struct Json_token {
        -:   53:    Json_token_type type;
        -:   54:    struct buffer value;
        -:   55:    struct location loc;
        -:   56:    Json_number_type number_type;
        -:   57:    union {
        -:   58:        long long integer;
        -:   59:        double fp;
        -:   60:    } number;
        -:   61:} Json_token;
        -:   62:
        -:   63:void Json_token_init(Json_token* t);
        -:   64:void Json_token_create(Json_token** t);
        -:   65:void Json_token_destroy(Json_token* t);
        -:   66:
        -:   67:#endif
